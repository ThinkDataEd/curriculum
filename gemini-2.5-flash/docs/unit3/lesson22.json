[
  {
    "title": "Abstract: Unit 3 Lesson 22 - Changing Format",
    "body": "Unit 3 Lesson 22, titled 'Changing Format,' provides students with comprehensive training on converting data between XML files and data table formats using RStudio. The primary objective is to enable students to proficiently translate complex XML code into a more accessible spreadsheet-like structure, and conversely, convert data tables back into XML. Essential concepts underscore that converting XML data to a spreadsheet format significantly enhances data understanding and visualization, making analysis more straightforward. Key materials for the lesson include RStudio, along with two crucial handouts: LMR_U3_L22_A, 'There and Back Again: From XML to Data Tables,' and LMR_U3_L22_B, 'There and Back Again: From Data Tables to XML.' The lesson integrates practical RStudio exercises, such as loading the 'XML' package, utilizing 'xmlParse()' for initial XML recognition, and employing 'xmlToDataFrame()' to finalize the conversion into an R data frame. Students also engage in a collaborative 'Whip Around' activity to construct XML code from data tables, fostering teamwork and peer review. The lesson concludes with a 'Class Scribes' reflection session and homework that involves continuing data collection for the Participatory Sensing campaign, a concept introduced in Unit 3 Lessons 17-19, preparing students for the subsequent 'What Does Our Campaign Data Say?' Practicum."
  },
  {
    "title": "Unit 3 Lesson 22: Learning Objectives and Core Principles of Data Format Conversion",
    "body": "Unit 3 Lesson 22, 'Changing Format,' is designed to teach students the critical skill of converting data files between XML format and data table format, and vice versa. The main objective is to ensure students can efficiently translate information contained within XML code into a more familiar and easily analyzable data table structure, and also to convert structured data tables back into XML. The essential concept underpinning this lesson is that transforming XML data into a spreadsheet-like format, such as a data table, greatly improves our ability to understand, view, and subsequently analyze complex datasets. This conversion process makes data more accessible for various analytical tasks. Students will gain practical experience in RStudio, applying these conversion techniques to real-world data scenarios, thereby strengthening their data manipulation capabilities for future data science challenges. This fundamental skill is crucial for working with diverse data sources encountered in data analytics."
  },
  {
    "title": "Required Materials and Handouts for Unit 3 Lesson 22: Changing Format",
    "body": "For Unit 3 Lesson 22, 'Changing Format,' students will utilize several key materials to facilitate their learning and practical application of data conversion. The primary software tool is RStudio, which will serve as the environment for executing code and performing data transformations. Complementing RStudio are two essential handouts provided to students. The first is LMR_U3_L22_A, titled 'There and Back Again: From XML to Data Tables.' This handout contains XML code that students will practice converting into a data table format, and it includes an empty data table for them to populate. The second handout is LMR_U3_L22_B, 'There and Back Again: From Data Tables to XML.' This material guides students through the reverse process, enabling them to convert data tables back into XML code. An electronic copy of LMR_U3_L22_A is specifically noted for distribution to allow students to easily copy and paste code directly into RStudio, streamlining the practical exercises during the lesson."
  },
  {
    "title": "Introduction to XML to Data Table Conversion in Unit 3 Lesson 22",
    "body": "Unit 3 Lesson 22, 'Changing Format,' begins by setting the context for data format conversion. Students are first encouraged to spend a few minutes comparing the default views of XML code and HTML code, referencing steps 14 and 16 from the previous Unit 3 Lesson 21. This comparison helps to highlight the differences and complexities of XML's raw format. Following this, students are informed that the core focus of today's lesson is to learn the crucial skill of translating information from XML code into a more structured and readable data table format. To support this objective, the handout LMR_U3_L22_A, 'There and Back Again: From XML to Data Tables,' is distributed to students. It is crucial that an electronic copy of LMR_U3_L22_A is provided, enabling students to effortlessly copy and paste the provided XML code into RStudio as they progress through the practical exercises."
  },
  {
    "title": "Setting Up RStudio and Loading XML Data in Unit 3 Lesson 22",
    "body": "In Unit 3 Lesson 22, 'Changing Format,' the practical conversion from XML to data tables begins with setting up the RStudio environment. It is suggested that students create a new RScript to manage the conversion process efficiently. The first essential step is to load the necessary 'XML' package by running the code 'library(\"XML\")'. This package provides the functions required for parsing and converting XML data. Following the package loading, students will assign the raw XML data, provided on page 1 of the LMR_U3_L22_A handout, to a variable named 'volunteers'. This involves copying and pasting the XML code within quotes into RStudio. After assignment, students are prompted to observe how RStudio displays this initial 'volunteers' data. They should note that RStudio/Posit Cloud displays it in its raw XML format, often indicating new lines with '\\n', signifying that it is not yet in an analyzable data table structure."
  },
  {
    "title": "Utilizing 'xmlParse()' for XML Data Recognition in Unit 3 Lesson 22",
    "body": "As part of Unit 3 Lesson 22, 'Changing Format,' students proceed with the vital step of making RStudio recognize their raw XML data in a structured way. After observing the initial raw display of the 'volunteers' data, the lesson introduces the 'xmlParse()' function, which is designed to translate the XML code into an object that RStudio can process as an XML file. Students execute the code 'volunteers <- xmlParse(volunteers)' to perform this translation. Upon successful execution, students are encouraged to observe their Environment pane in RStudio. The 'volunteers' data, which previously appeared as raw text, will now be recognized as an 'XMLInternalDocument.' This signifies a crucial intermediate step, indicating that RStudio has parsed the XML structure, moving closer to the ultimate goal of converting it into a usable data frame for analysis within the lesson's context."
  },
  {
    "title": "Converting Parsed XML to an R Data Frame with 'xmlToDataFrame()' in Unit 3 Lesson 22",
    "body": "Building upon the parsing step in Unit 3 Lesson 22, 'Changing Format,' the final stage of converting XML into a familiar R data frame is performed using the 'xmlToDataFrame()' function. After the 'volunteers' data has been successfully parsed into an 'XMLInternalDocument' using 'xmlParse()', students run the code 'volunteers <- xmlToDataFrame(volunteers)'. This command transforms the XML structure into a tabular data frame, a format that is much more amenable to data analysis in RStudio. Upon completion, students will observe a significant change in the Environment pane. The 'volunteers' data will now display in a recognizable spreadsheet-like format, similar to other datasets they have worked with throughout the year, such as 'cdc', 'atus', 'slasher', and 'titanic'. This conversion makes the data readily accessible and understandable, fulfilling a primary objective of the lesson."
  },
  {
    "title": "Practical Application and Class Discussion of XML to Data Table Results in Unit 3 Lesson 22",
    "body": "Following the successful conversion of XML data into an R data frame in Unit 3 Lesson 22, 'Changing Format,' students proceed to a practical application phase. They are instructed to 'View' the newly created 'volunteers' data frame in RStudio. Using the now familiar tabular format, students will fill in the empty data table provided in the LMR_U3_L22_A handout. This hands-on activity reinforces their understanding of how raw XML data translates into a structured, readable format. After individual completion of the handout, the lesson transitions into a whole-class discussion. This discussion centers on student responses to the questions on page 2 of the LMR_U3_L22_A handout, allowing for shared learning, clarification of concepts, and consolidation of their understanding of the XML to data table conversion process and its benefits for data analysis."
  },
  {
    "title": "Introducing Data Table to XML Conversion and Team Activity in Unit 3 Lesson 22",
    "body": "Once students have mastered the conversion from XML to data tables in Unit 3 Lesson 22, 'Changing Format,' the lesson shifts to the inverse process: converting data tables back into XML code. To facilitate this, students are organized into teams, and the second handout, LMR_U3_L22_B, titled 'There and Back Again: From Data Tables to XML,' is distributed. This handout provides the necessary context and data for this reverse conversion task. Students are allotted time within their teams to collaboratively work through the handout and begin formulating the correct XML code based on the provided data table. This segment of the lesson prepares students for an interactive, guided exercise where they will collectively reconstruct XML from a structured data table, reinforcing their understanding of XML syntax and structure from a different perspective."
  },
  {
    "title": "Interactive XML Code Construction with 'Whip Around' in Unit 3 Lesson 22",
    "body": "A key interactive component of Unit 3 Lesson 22, 'Changing Format,' for the data table to XML conversion is the 'Whip Around' activity. Once student teams have had time to work with LMR_U3_L22_B and formulate their XML code, they will collaboratively guide the instructor in writing the correct XML code line by line. During this activity, teams take turns suggesting the next line of XML code. Importantly, teams that are waiting their turn are tasked with actively checking the proposed line of code. If a team identifies an error or believes a different line is more appropriate, they are instructed to stop the process and propose their alternative code. The instructor will only proceed with writing the line of code once all teams have reached a consensus, ensuring a thorough understanding and correct construction of the XML output through peer review and collective agreement."
  },
  {
    "title": "Concluding Activities, Class Scribes, and Homework for Unit 3 Lesson 22",
    "body": "As Unit 3 Lesson 22, 'Changing Format,' draws to a close, several activities are implemented to consolidate learning and prepare for future work. The 'Class Scribes' activity encourages a designated team of students to briefly discuss what they consider to be the three most important topics or takeaways from the day's lesson. This promotes reflection and summarization of key concepts related to XML and data table conversions. For homework, students are instructed to continue collecting data using the class's Participatory Sensing campaign. This ongoing data collection effort connects the lesson to previous learning experiences, specifically referencing Unit 3 Lessons 17-19, which introduced and developed the campaign. The data collected will be subsequently analyzed on the next day during the 'What Does Our Campaign Data Say?' Practicum, bridging the current lesson's skills with practical data analysis scenarios."
  },
  {
    "title": "Recap: Objectives, Core Concepts, and Resources for Unit 3 Lesson 22",
    "body": "Unit 3 Lesson 22, 'Changing Format,' is designed with the explicit objective of enabling students to fluidly convert data between XML files and the more accessible data table format, and vice versa. This dual conversion capability is a fundamental skill for data manipulation. The essential concept highlighted throughout the lesson is that converting complex XML structures into a straightforward spreadsheet format significantly aids in both understanding and viewing the data, making it more amenable to analysis. The lesson relies heavily on RStudio as the primary development environment. Additionally, two critical handouts, LMR_U3_L22_A ('There and Back Again: From XML to Data Tables') and LMR_U3_L22_B ('There and Back Again: From Data Tables to XML'), are indispensable resources that guide students through both directions of the conversion process, providing the necessary code samples and exercises."
  },
  {
    "title": "Summary of XML to R Data Frame Conversion Process in Unit 3 Lesson 22",
    "body": "In Unit 3 Lesson 22, 'Changing Format,' students systematically learn to convert XML data into an R data frame. The process begins in RStudio by loading the 'XML' package with 'library(\"XML\")'. Next, the raw XML data, often presented in a less readable format (e.g., with '\\n' for new lines), is assigned to a variable, such as 'volunteers'. The crucial intermediate step involves using the 'xmlParse()' function, as in 'volunteers <- xmlParse(volunteers)', which translates the raw XML into an 'XMLInternalDocument' that RStudio recognizes as a structured XML file. Finally, the parsed XML is transformed into a familiar R data frame using 'xmlToDataFrame()', for example, 'volunteers <- xmlToDataFrame(volunteers)'. This final step converts the data into a tabular, spreadsheet-like format, making it directly comparable to other datasets like 'cdc' or 'titanic' and ready for analysis, addressing the lesson's core objective of enhancing data interpretability."
  },
  {
    "title": "Recap: Data Table to XML Conversion and Collaborative Learning in Unit 3 Lesson 22",
    "body": "Unit 3 Lesson 22, 'Changing Format,' not only covers converting XML to data tables but also emphasizes the reverse process: transforming structured data tables back into XML format. This is facilitated by the handout LMR_U3_L22_B, 'There and Back Again: From Data Tables to XML,' which provides the framework for this activity. A key pedagogical approach used for this segment is the 'Whip Around' team activity. In this collaborative exercise, student teams work together to construct lines of XML code from a given data table. Teams actively monitor and correct each other's suggestions, ensuring accuracy and shared understanding before any line of code is finalized by the instructor. This interactive method reinforces the structural rules of XML and encourages critical thinking and peer learning in the process of data format conversion, linking directly to the lesson's goal of mastering two-way data format changes."
  },
  {
    "title": "Contextualizing Unit 3 Lesson 22: Ongoing Campaigns and Future Data Analysis",
    "body": "The skills acquired in Unit 3 Lesson 22, 'Changing Format,' are integrated into broader curriculum objectives. As part of their ongoing learning, students are assigned homework to continue gathering data for the class's Participatory Sensing campaign. This task directly connects to the foundational work established in Unit 3 Lessons 17-19, where the campaign was initiated and developed. The data collected through this ongoing effort will serve as the raw material for an upcoming analytical session. The very next day, students will apply their data processing and understanding skills during the 'What Does Our Campaign Data Say?' Practicum, where they will analyze the accumulated campaign data. This continuous cycle of data collection, conversion, and analysis underscores the practical relevance of mastering data format changes taught in Unit 3 Lesson 22."
  }
]