[
  {
    "title": "Lesson 21: Introduction to XML",
    "body": "This lesson, Unit 3 Lesson 21, introduces students to XML (Extensible Markup Language) as a format for storing web data. The objective is for students to understand why data needs different storage formats, specifically why XML is suitable for web data. Key materials include handouts for 'Online Data-ing' and 'Mountains – HTML vs. XML', links to online data for mountain peaks, and online viewers for XML and HTML. Vocabulary includes XML, defined as a popular internet data storage format that allows for readable web pages and easy data updates. Essential concepts highlight that XML uses tags to store data in an understandable format for campaigns and programming. The lesson begins by reviewing previous work, discussing data presentation differences online versus in RStudio, and then focuses on comparing HTML and XML representations of mountain data. Students will explore how XML tags structure data, the role of tags and end tags, and how variable names and observations are represented. The lesson also involves practical exercises using online viewers to compare the display of HTML and XML code, demonstrating the impact of data point removal on data integrity and analysis in both formats. The primary takeaway is that XML facilitates organized data storage and modification on the web, with varying display consequences depending on the presentation method."
  },
  {
    "title": "XML Vocabulary and Essential Concepts",
    "body": "XML, or Extensible Markup Language, is a key vocabulary term introduced in Unit 3 Lesson 21. It is described as a popular format for storing data on the Internet. Its advantages include creating readable web pages and allowing programmers to easily update values in a data table if those values change. Essential concepts related to XML state that it is a programming language used with campaigns. It involves creating basic XML 'tags' in the code, which help store data in a format that humans can understand. These tags define the beginning and end of data elements, making the structure clear and facilitating data management and modification. Understanding these tags is crucial for interpreting how data is organized and accessed on the web, especially when comparing it to other data formats like HTML."
  },
  {
    "title": "Data Presentation: HTML vs. XML",
    "body": "Unit 3 Lesson 21 explores the differences in how data is presented online, contrasting structured data in RStudio with web-based formats like HTML and XML. While RStudio primarily uses data frames (tables), online data can appear in various structures such as tables (Wikipedia), streams (Twitter), or distributed across web pages (Yelp). The lesson uses mountain peak data, previously scraped in Lab 3E, to illustrate these differences. Students examine both HTML and XML versions of this data, noting how HTML typically renders as a visual table, while XML presents data in a more structured, list-like format with explicit tags. The exercise highlights that in XML, each data value is directly associated with its variable name through tags (e.g., <state>Alaska</state>), ensuring data integrity. In contrast, removing a data point from an HTML table can cause data values to shift, leading to misaligned columns and compromised analysis, whereas XML maintains data integrity because each element is independently tagged. This comparison underscores the benefits of XML for organized data storage and manipulation on the web."
  },
  {
    "title": "Understanding XML Structure and Tags",
    "body": "In Unit 3 Lesson 21, students learn about the fundamental structure of XML, particularly focusing on the role of tags. When presented with the Mountain Peak XML data, students are asked to analyze its structure. Indentations in XML visually represent the hierarchical organization of data, showing how elements are nested within others (e.g., individual mountain data nested within a main 'data' section and then within '<mountain>' tags). Tags, such as '<state>' and '</state>', mark the beginning and end of specific data elements or variables. The content between a tag and its corresponding end tag represents the value for that variable (e.g., 'Alaska' is the value for the 'state' variable). Variable names themselves are implicitly defined by these tags within the main data structure (like '<mountain>...</mountain>'), and observations (specific data points) are found within the variable tags. Understanding these tag roles is crucial for parsing and interpreting XML data."
  },
  {
    "title": "Practical XML and HTML Data Visualization",
    "body": "Unit 3 Lesson 21 incorporates practical exercises using online viewers to compare the display characteristics of XML and HTML. Students are instructed to use provided URLs: an XML viewer ([https://jsonformatter.org/xml-viewer](https://jsonformatter.org/xml-viewer)) and an HTML viewer ([https://jsonformatter.org/html-viewer](https://jsonformatter.org/html-viewer)). They copy and paste code from the 'Mountains – HTML vs. XML' handout into the input panels of these viewers. Observing the 'Output XML' and 'Output HTML' panels reveals distinct presentation styles. HTML typically renders as a formatted table, while XML displays data in a structured, nested list format, clearly delineating each data point with its corresponding tag. This visual comparison helps students grasp how different markup languages represent the same underlying data and highlights the inherent structural differences that influence how the data is perceived and processed."
  },
  {
    "title": "Data Integrity: Comparing XML and HTML Modifications",
    "body": "A key aspect of Unit 3 Lesson 21 involves demonstrating the impact of data modifications on data integrity within XML and HTML. Students observe that removing a data point from an XML structure (e.g., removing a '<state>Alaska</state>' entry) does not disrupt the association between variable names and remaining data values. The XML output accurately reflects the removal without causing misalignment. Conversely, when a corresponding data point is removed from an HTML table (e.g., a '<TD>' element), the remaining data in that row shifts, leading to columns being mismatched with their intended variables. This exercise highlights a significant advantage of XML: its tag-based structure preserves data integrity even after data point removal, making it more robust for data analysis and manipulation compared to HTML tables where positional integrity is crucial and easily broken. This emphasizes why XML is preferred for structured data storage."
  },
  {
    "title": "Homework Reflection on XML and HTML",
    "body": "The homework assignment for Unit 3 Lesson 21 encourages students to reflect on the purpose and implications of using XML and HTML for data. Following a period of data collection using a Participatory Sensing campaign (related to Units 3 Lessons 17-19), students are tasked with considering how XML and HTML function in relation to data. This reflection should draw upon the practical comparisons made during the lesson, particularly regarding data storage, readability, ease of modification, and data integrity. By contemplating the differences observed in how HTML and XML present and handle data, especially when changes are made, students are expected to solidify their understanding of why different data formats are necessary and advantageous in various contexts, particularly for web-based applications and data management."
  }
]